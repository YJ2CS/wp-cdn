#--------设置fastcgi_cache----------
fastcgi_connect_timeout 300;
fastcgi_send_timeout 300;
fastcgi_read_timeout 300;
fastcgi_buffer_size 64k;
fastcgi_buffers 4 64k;
fastcgi_busy_buffers_size 128k;
fastcgi_temp_file_write_size 256k;
# 回传 php-fpm 的响应码，显示 Nginx 设定的错误页面（如 404 等）
fastcgi_intercept_errors on;

fastcgi_cache_path /www/server/nginx/fc_cache_WC levels=1:2 keys_zone=WPCACHE:250m inactive=1d max_size=1G;
fastcgi_cache_path /www/server/nginx/fc_cache_WP levels=1:2 keys_zone=WORDPRESS:250m inactive=1d max_size=1G;
fastcgi_temp_path /www/server/nginx/fc_cache_temp;  # 临时文件目录
# 生成缓存所需要的key，默认设置就ok
fastcgi_cache_key "$scheme$request_method$host$request_uri";
# note: can also use HTTP headers to form the cache key, e.g.
#fastcgi_cache_key $scheme$request_method$host$request_uri$http_x_custom_header;

# 在指定错误下允许使用过期 Cache
fastcgi_cache_use_stale error timeout invalid_header updating http_500;

#不对从被代理服务器传来的应答进行转发
fastcgi_hide_header Pragma;

#忽略一切nocache申明，避免不缓存伪静态等
# fastcgi_ignore_headers Cache-Control Expires Set-Cookie Vary X-Accel-Redirect X-Accel-Expires X-Accel-Limit-Rate X-Accel-Buffering X-Accel-Charset;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie Vary;

#缓存线程锁，队列形式线程，单独一个线程
#fastcgi_cache_lock on;
#--------设置fastcgi_cache END----------


# 需要上面fastcgi_ignore_headers的原因是，如果没有设置fastcgi_ignore_headers，则会遇到下面的情况。
# ngx_http_upstream.c
# line 3136  当fastcgi响应包含set-cookie时，不缓存
# line 3242 当响应头包含Expires时，如果过期时间大于当前服务器时间，则nginx_cache会缓存该响应，否则，则不缓存
# line 3199  当响应头包含Cache-Control时，#####如果####这里有如果啊。。。
# 【注意】如果Cache-Control参数值为no-cache、no-store、private中任意一个时，则不缓存...不缓存...
# 【注意】如果Cache-Control参数值为max-age时，会被缓存，且nginx设置的cache的过期时间，就是系统当前时间 + mag-age的值
# Vary字段，则不会缓存此类响应

# 请按照自己的需求更改
# fastcgi_cache缓存目录, 只能在http配置项里配置
# levels：目录层级，比如1:2会生成16*256个字目录
# keys_zone：这个缓存空间的名字，fastcgi_cache 使用这个值
# inactive：默认失效时间
# max_size：表示最多用多少硬盘空间
# fastcgi_cache缓存目录
# fastcgi_cache_valid：定义哪些http头要缓存
# fastcgi_cache_min_uses：URL经过多少次请求将被缓存
# fastcgi_cache_use_stale：定义哪些情况下用过期缓存
# fastcgi_cache_key：定义fastcgi_cache的key，示例中就以请求的URI作为缓存的key，Nginx会取这个key的md5作为缓存文件，如果设置了缓存哈希目录，Nginx会从后往前取相应的位数做为目录
# fastcgi_cache：用哪个缓存空间,fastcgi_cache_path的keys_zone值
# 写在最后：
# fastcgi_cache缓存的是fastcgi生成的内容。
# proxy_cache减少了nginx与php的通信的次数，减轻php和数据库压力，比membercache来的更直接。
# 弊端是缓存不能更新，也容易会出现混乱。但是不是没有解决办法，这个就需要折腾了